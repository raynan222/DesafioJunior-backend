version: '3'

services:
  web-back:
    image: pontotel-desafio-backend:1.0
    build:
      context: .
      dockerfile: ../build/Dockerfile.backend
    env_file:
      - ../.env
    volumes:
      - './:/backend'
    depends_on:
      - postgres
    networks:
        - backend
        - frontend
    command: python -m gunicorn --workers 1 --bind 0.0.0.0:8080 -m 007 application:app
#  web-front:
#    image: pontotel-desafio-frontend:1.0
#    build:
#      context: .
#      dockerfile: ./build/Dockerfile.frontend
#    volumes:
#      - './:/frontend'
#    env_file:
#      - ./..env
#    depends_on:
#      - web-back
#    networks:
#      - frontend
#    command: npm run start

  postgres:
    image: postgres:14.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ../.env
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: default_database
    networks:
      - backend
    ports:
      - "5432:5432"
volumes:
  postgres_data:

networks:
  frontend:
    name: frontend
  backend:
    name: backend